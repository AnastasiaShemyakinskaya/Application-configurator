/*
 * generated by Xtext 2.14.0
 */
grammar InternalInfoProject;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ru.spbstu.application.configurator.model.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ru.spbstu.application.configurator.model.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ru.spbstu.application.configurator.model.services.InfoProjectGrammarAccess;

}

@parser::members {

 	private InfoProjectGrammarAccess grammarAccess;

    public InternalInfoProjectParser(TokenStream input, InfoProjectGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected InfoProjectGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementVersionParserRuleCall_0_0());
				}
				lv_element_0_0=ruleVersion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"element",
						lv_element_0_0,
						"ru.spbstu.application.configurator.model.InfoProject.Version");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementNamespaceParserRuleCall_1_0());
				}
				lv_element_1_0=ruleNamespace
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"element",
						lv_element_1_0,
						"ru.spbstu.application.configurator.model.InfoProject.Namespace");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementTenantParserRuleCall_2_0());
				}
				lv_element_2_0=ruleTenant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"element",
						lv_element_2_0,
						"ru.spbstu.application.configurator.model.InfoProject.Tenant");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementApplicationParserRuleCall_3_0());
				}
				lv_element_3_0=ruleApplication
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"element",
						lv_element_3_0,
						"ru.spbstu.application.configurator.model.InfoProject.Application");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementHoldParserRuleCall_4_0());
				}
				lv_element_4_0=ruleHold
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"element",
						lv_element_4_0,
						"ru.spbstu.application.configurator.model.InfoProject.Hold");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementIngestNodeParserRuleCall_5_0());
				}
				lv_element_5_0=ruleIngestNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"element",
						lv_element_5_0,
						"ru.spbstu.application.configurator.model.InfoProject.IngestNode");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementIncludeParserRuleCall_6_0());
				}
				lv_element_6_0=ruleInclude
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"element",
						lv_element_6_0,
						"ru.spbstu.application.configurator.model.InfoProject.Include");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	iv_ruleVersion=ruleVersion
	{ $current=$iv_ruleVersion.current; }
	EOF;

// Rule Version
ruleVersion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='version:'
		{
			newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getVersionKeyword_0());
		}
		this_SPACE_1=RULE_SPACE
		{
			newLeafNode(this_SPACE_1, grammarAccess.getVersionAccess().getSPACETerminalRuleCall_1());
		}
		(
			(
				lv_name_2_0=RULE_VERSION_NUMBER
				{
					newLeafNode(lv_name_2_0, grammarAccess.getVersionAccess().getNameVERSION_NUMBERTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVersionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ru.spbstu.application.configurator.model.InfoProject.VERSION_NUMBER");
				}
			)
		)
	)
;

// Entry rule entryRuleNamespace
entryRuleNamespace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); }
	iv_ruleNamespace=ruleNamespace
	{ $current=$iv_ruleNamespace.current; }
	EOF;

// Rule Namespace
ruleNamespace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='namespace:'
		{
			newLeafNode(otherlv_0, grammarAccess.getNamespaceAccess().getNamespaceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceAccess().getFeaturePrefixParserRuleCall_1_0());
				}
				lv_feature_1_0=rulePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceRule());
					}
					add(
						$current,
						"feature",
						lv_feature_1_0,
						"ru.spbstu.application.configurator.model.InfoProject.Prefix");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceAccess().getFeatureUriParserRuleCall_2_0());
				}
				lv_feature_2_0=ruleUri
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceRule());
					}
					add(
						$current,
						"feature",
						lv_feature_2_0,
						"ru.spbstu.application.configurator.model.InfoProject.Uri");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrefix
entryRulePrefix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixRule()); }
	iv_rulePrefix=rulePrefix
	{ $current=$iv_rulePrefix.current; }
	EOF;

// Rule Prefix
rulePrefix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='prefix: '
		{
			newLeafNode(otherlv_0, grammarAccess.getPrefixAccess().getPrefixKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPrefixAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrefixRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleUri
entryRuleUri returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUriRule()); }
	iv_ruleUri=ruleUri
	{ $current=$iv_ruleUri.current; }
	EOF;

// Rule Uri
ruleUri returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUriAccess().getUriAction_0(),
					$current);
			}
		)
		otherlv_1='uri:'
		{
			newLeafNode(otherlv_1, grammarAccess.getUriAccess().getUriKeyword_1());
		}
		this_SPACE_2=RULE_SPACE
		{
			newLeafNode(this_SPACE_2, grammarAccess.getUriAccess().getSPACETerminalRuleCall_2());
		}
		(
			(
				(
					lv_name_3_1=RULE_ID
					{
						newLeafNode(lv_name_3_1, grammarAccess.getUriAccess().getNameIDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_3_2='-'
					{
						newLeafNode(lv_name_3_2, grammarAccess.getUriAccess().getNameHyphenMinusKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_2, null);
					}
					    |
					lv_name_3_3='$'
					{
						newLeafNode(lv_name_3_3, grammarAccess.getUriAccess().getNameDollarSignKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_3, null);
					}
					    |
					lv_name_3_4='{'
					{
						newLeafNode(lv_name_3_4, grammarAccess.getUriAccess().getNameLeftCurlyBracketKeyword_3_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_4, null);
					}
					    |
					lv_name_3_5='}'
					{
						newLeafNode(lv_name_3_5, grammarAccess.getUriAccess().getNameRightCurlyBracketKeyword_3_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_5, null);
					}
					    |
					lv_name_3_6='^'
					{
						newLeafNode(lv_name_3_6, grammarAccess.getUriAccess().getNameCircumflexAccentKeyword_3_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_6, null);
					}
					    |
					lv_name_3_7=':'
					{
						newLeafNode(lv_name_3_7, grammarAccess.getUriAccess().getNameColonKeyword_3_0_6());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_7, null);
					}
					    |
					lv_name_3_8='.'
					{
						newLeafNode(lv_name_3_8, grammarAccess.getUriAccess().getNameFullStopKeyword_3_0_7());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_8, null);
					}
					    |
					lv_name_3_9=RULE_VERSION_NUMBER
					{
						newLeafNode(lv_name_3_9, grammarAccess.getUriAccess().getNameVERSION_NUMBERTerminalRuleCall_3_0_8());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUriRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_9,
							"ru.spbstu.application.configurator.model.InfoProject.VERSION_NUMBER");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFeatureName
entryRuleFeatureName returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SPACE");
}:
	{ newCompositeNode(grammarAccess.getFeatureNameRule()); }
	iv_ruleFeatureName=ruleFeatureName
	{ $current=$iv_ruleFeatureName.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule FeatureName
ruleFeatureName returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SPACE");
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFeatureNameAccess().getFeatureNameAction_0(),
					$current);
			}
		)
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getFeatureNameAccess().getNameKeyword_1());
		}
		(
			(
				(
					lv_name_2_1=RULE_ID
					{
						newLeafNode(lv_name_2_1, grammarAccess.getFeatureNameAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_2_2='-'
					{
						newLeafNode(lv_name_2_2, grammarAccess.getFeatureNameAccess().getNameHyphenMinusKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_2, null);
					}
					    |
					lv_name_2_3='$'
					{
						newLeafNode(lv_name_2_3, grammarAccess.getFeatureNameAccess().getNameDollarSignKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_3, null);
					}
					    |
					lv_name_2_4='{'
					{
						newLeafNode(lv_name_2_4, grammarAccess.getFeatureNameAccess().getNameLeftCurlyBracketKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_4, null);
					}
					    |
					lv_name_2_5='}'
					{
						newLeafNode(lv_name_2_5, grammarAccess.getFeatureNameAccess().getNameRightCurlyBracketKeyword_2_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_5, null);
					}
					    |
					lv_name_2_6='^'
					{
						newLeafNode(lv_name_2_6, grammarAccess.getFeatureNameAccess().getNameCircumflexAccentKeyword_2_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_6, null);
					}
					    |
					lv_name_2_7=':'
					{
						newLeafNode(lv_name_2_7, grammarAccess.getFeatureNameAccess().getNameColonKeyword_2_0_6());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_7, null);
					}
					    |
					lv_name_2_8='.'
					{
						newLeafNode(lv_name_2_8, grammarAccess.getFeatureNameAccess().getNameFullStopKeyword_2_0_7());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_8, null);
					}
					    |
					lv_name_2_9=RULE_VERSION_NUMBER
					{
						newLeafNode(lv_name_2_9, grammarAccess.getFeatureNameAccess().getNameVERSION_NUMBERTerminalRuleCall_2_0_8());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_9,
							"ru.spbstu.application.configurator.model.InfoProject.VERSION_NUMBER");
					}
					    |
					lv_name_2_10=RULE_EXCEPTION
					{
						newLeafNode(lv_name_2_10, grammarAccess.getFeatureNameAccess().getNameEXCEPTIONTerminalRuleCall_2_0_9());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureNameRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_10,
							"ru.spbstu.application.configurator.model.InfoProject.EXCEPTION");
					}
				)
			)
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	iv_ruleApplication=ruleApplication
	{ $current=$iv_ruleApplication.current; }
	EOF;

// Rule Application
ruleApplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='application:'
		{
			newLeafNode(otherlv_0, grammarAccess.getApplicationAccess().getApplicationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getFeatures1FeatureNameParserRuleCall_1_0());
				}
				lv_features1_1_0=ruleFeatureName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"features1",
						lv_features1_1_0,
						"ru.spbstu.application.configurator.model.InfoProject.FeatureName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getFeaturesArchiveTypeParserRuleCall_2_0());
				}
				lv_features_2_0=ruleArchiveType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"features",
						lv_features_2_0,
						"ru.spbstu.application.configurator.model.InfoProject.ArchiveType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getFeatureCategoryParserRuleCall_3_0());
				}
				lv_feature_3_0=ruleCategory
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"feature",
						lv_feature_3_0,
						"ru.spbstu.application.configurator.model.InfoProject.Category");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getFeatureDescriptionParserRuleCall_4_0());
				}
				lv_feature_4_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"feature",
						lv_feature_4_0,
						"ru.spbstu.application.configurator.model.InfoProject.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getFeatureMCSParserRuleCall_5_0());
				}
				lv_feature_5_0=ruleMCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"feature",
						lv_feature_5_0,
						"ru.spbstu.application.configurator.model.InfoProject.MCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getFeatureTypeParserRuleCall_6_0());
				}
				lv_feature_6_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"feature",
						lv_feature_6_0,
						"ru.spbstu.application.configurator.model.InfoProject.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTenant
entryRuleTenant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTenantRule()); }
	iv_ruleTenant=ruleTenant
	{ $current=$iv_ruleTenant.current; }
	EOF;

// Rule Tenant
ruleTenant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='tenant:'
		{
			newLeafNode(otherlv_0, grammarAccess.getTenantAccess().getTenantKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTenantAccess().getFeatures1FeatureNameParserRuleCall_1_0());
				}
				lv_features1_1_0=ruleFeatureName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTenantRule());
					}
					add(
						$current,
						"features1",
						lv_features1_1_0,
						"ru.spbstu.application.configurator.model.InfoProject.FeatureName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleHold
entryRuleHold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHoldRule()); }
	iv_ruleHold=ruleHold
	{ $current=$iv_ruleHold.current; }
	EOF;

// Rule Hold
ruleHold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='hold:'
		{
			newLeafNode(otherlv_0, grammarAccess.getHoldAccess().getHoldKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHoldAccess().getFeatures1FeatureNameParserRuleCall_1_0());
				}
				lv_features1_1_0=ruleFeatureName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHoldRule());
					}
					add(
						$current,
						"features1",
						lv_features1_1_0,
						"ru.spbstu.application.configurator.model.InfoProject.FeatureName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHoldAccess().getFeaturesHoldTypeParserRuleCall_2_0());
				}
				lv_features_2_0=ruleHoldType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHoldRule());
					}
					add(
						$current,
						"features",
						lv_features_2_0,
						"ru.spbstu.application.configurator.model.InfoProject.HoldType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArchiveType
entryRuleArchiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchiveTypeRule()); }
	iv_ruleArchiveType=ruleArchiveType
	{ $current=$iv_ruleArchiveType.current; }
	EOF;

// Rule ArchiveType
ruleArchiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='archiveType: '
		{
			newLeafNode(otherlv_0, grammarAccess.getArchiveTypeAccess().getArchiveTypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchiveTypeAccess().getValueEnumOfArchiveTypeEnumRuleCall_1_0());
				}
				lv_value_1_0=ruleenumOfArchiveType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchiveTypeRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"ru.spbstu.application.configurator.model.InfoProject.enumOfArchiveType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCategory
entryRuleCategory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCategoryRule()); }
	iv_ruleCategory=ruleCategory
	{ $current=$iv_ruleCategory.current; }
	EOF;

// Rule Category
ruleCategory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCategoryAccess().getCategoryAction_0_0(),
						$current);
				}
			)
			otherlv_1='category:'
			{
				newLeafNode(otherlv_1, grammarAccess.getCategoryAccess().getCategoryKeyword_0_1());
			}
			this_SPACE_2=RULE_SPACE
			{
				newLeafNode(this_SPACE_2, grammarAccess.getCategoryAccess().getSPACETerminalRuleCall_0_2());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCategoryRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				this_SPACE_4=RULE_SPACE
				{
					newLeafNode(this_SPACE_4, grammarAccess.getCategoryAccess().getSPACETerminalRuleCall_0_4());
				}
			)?
			(
				this_ID_5=RULE_ID
				{
					newLeafNode(this_ID_5, grammarAccess.getCategoryAccess().getIDTerminalRuleCall_0_5());
				}
			)?
		)
		    |
		(
			this_ID_6=RULE_ID
			{
				newLeafNode(this_ID_6, grammarAccess.getCategoryAccess().getIDTerminalRuleCall_1_0());
			}
			    |
			this_ADDITION_7=RULE_ADDITION
			{
				newLeafNode(this_ADDITION_7, grammarAccess.getCategoryAccess().getADDITIONTerminalRuleCall_1_1());
			}
			    |
			this_VERSION_NUMBER_8=RULE_VERSION_NUMBER
			{
				newLeafNode(this_VERSION_NUMBER_8, grammarAccess.getCategoryAccess().getVERSION_NUMBERTerminalRuleCall_1_2());
			}
		)*
	)
;

// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	iv_ruleDescription=ruleDescription
	{ $current=$iv_ruleDescription.current; }
	EOF;

// Rule Description
ruleDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDescriptionAccess().getDescriptionAction_0(),
					$current);
			}
		)
		otherlv_1='description:'
		{
			newLeafNode(otherlv_1, grammarAccess.getDescriptionAccess().getDescriptionKeyword_1());
		}
		this_SPACE_2=RULE_SPACE
		{
			newLeafNode(this_SPACE_2, grammarAccess.getDescriptionAccess().getSPACETerminalRuleCall_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDescriptionAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			this_SPACE_4=RULE_SPACE
			{
				newLeafNode(this_SPACE_4, grammarAccess.getDescriptionAccess().getSPACETerminalRuleCall_4_0());
			}
			this_ID_5=RULE_ID
			{
				newLeafNode(this_ID_5, grammarAccess.getDescriptionAccess().getIDTerminalRuleCall_4_1());
			}
		)*
	)
;

// Entry rule entryRuleMCS
entryRuleMCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCSRule()); }
	iv_ruleMCS=ruleMCS
	{ $current=$iv_ruleMCS.current; }
	EOF;

// Rule MCS
ruleMCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMCSAccess().getMCSAction_0(),
					$current);
			}
		)
		otherlv_1='metadataCacheSize: '
		{
			newLeafNode(otherlv_1, grammarAccess.getMCSAccess().getMetadataCacheSizeKeyword_1());
		}
		(
			(
				(
					lv_name_2_1=RULE_ID
					{
						newLeafNode(lv_name_2_1, grammarAccess.getMCSAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_2_2='-'
					{
						newLeafNode(lv_name_2_2, grammarAccess.getMCSAccess().getNameHyphenMinusKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_2, null);
					}
					    |
					lv_name_2_3='$'
					{
						newLeafNode(lv_name_2_3, grammarAccess.getMCSAccess().getNameDollarSignKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_3, null);
					}
					    |
					lv_name_2_4='{'
					{
						newLeafNode(lv_name_2_4, grammarAccess.getMCSAccess().getNameLeftCurlyBracketKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_4, null);
					}
					    |
					lv_name_2_5='}'
					{
						newLeafNode(lv_name_2_5, grammarAccess.getMCSAccess().getNameRightCurlyBracketKeyword_2_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_5, null);
					}
					    |
					lv_name_2_6='^'
					{
						newLeafNode(lv_name_2_6, grammarAccess.getMCSAccess().getNameCircumflexAccentKeyword_2_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_6, null);
					}
					    |
					lv_name_2_7=':'
					{
						newLeafNode(lv_name_2_7, grammarAccess.getMCSAccess().getNameColonKeyword_2_0_6());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_7, null);
					}
					    |
					lv_name_2_8='.'
					{
						newLeafNode(lv_name_2_8, grammarAccess.getMCSAccess().getNameFullStopKeyword_2_0_7());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_8, null);
					}
					    |
					lv_name_2_9=RULE_EXCEPTION
					{
						newLeafNode(lv_name_2_9, grammarAccess.getMCSAccess().getNameEXCEPTIONTerminalRuleCall_2_0_8());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_9,
							"ru.spbstu.application.configurator.model.InfoProject.EXCEPTION");
					}
					    |
					lv_name_2_10=RULE_VERSION_NUMBER
					{
						newLeafNode(lv_name_2_10, grammarAccess.getMCSAccess().getNameVERSION_NUMBERTerminalRuleCall_2_0_9());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCSRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_10,
							"ru.spbstu.application.configurator.model.InfoProject.VERSION_NUMBER");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypeAccess().getTypeAction_0(),
					$current);
			}
		)
		otherlv_1='type:'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getTypeKeyword_1());
		}
		this_SPACE_2=RULE_SPACE
		{
			newLeafNode(this_SPACE_2, grammarAccess.getTypeAccess().getSPACETerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getValueEnumOfTypesEnumRuleCall_3_0());
				}
				lv_value_3_0=ruleenumOfTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"ru.spbstu.application.configurator.model.InfoProject.enumOfTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleHoldType
entryRuleHoldType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHoldTypeRule()); }
	iv_ruleHoldType=ruleHoldType
	{ $current=$iv_ruleHoldType.current; }
	EOF;

// Rule HoldType
ruleHoldType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='holdType:'
			{
				newLeafNode(otherlv_0, grammarAccess.getHoldTypeAccess().getHoldTypeKeyword_0());
			}
		)+
		this_WS_1=RULE_WS
		{
			newLeafNode(this_WS_1, grammarAccess.getHoldTypeAccess().getWSTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHoldTypeAccess().getFeaturesFeatureNameParserRuleCall_2_0());
				}
				lv_features_2_0=ruleFeatureName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHoldTypeRule());
					}
					add(
						$current,
						"features",
						lv_features_2_0,
						"ru.spbstu.application.configurator.model.InfoProject.FeatureName");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getHoldTypeAccess().getFeaturesTypeAttributeParserRuleCall_3_0());
				}
				lv_features_3_0=ruleTypeAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHoldTypeRule());
					}
					add(
						$current,
						"features",
						lv_features_3_0,
						"ru.spbstu.application.configurator.model.InfoProject.TypeAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeAttribute
entryRuleTypeAttribute returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SPACE");
}:
	{ newCompositeNode(grammarAccess.getTypeAttributeRule()); }
	iv_ruleTypeAttribute=ruleTypeAttribute
	{ $current=$iv_ruleTypeAttribute.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeAttribute
ruleTypeAttribute returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SPACE");
}
@after {
	leaveRule();
}:
	(
		otherlv_0='type:'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeAttributeAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleInclude
entryRuleInclude returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	iv_ruleInclude=ruleInclude
	{ $current=$iv_ruleInclude.current; }
	EOF;

// Rule Include
ruleInclude returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIncludeAccess().getIncludeAction_0(),
					$current);
			}
		)
		(
			otherlv_1='includes:'
			{
				newLeafNode(otherlv_1, grammarAccess.getIncludeAccess().getIncludesKeyword_1());
			}
		)+
		this_WS_2=RULE_WS
		{
			newLeafNode(this_WS_2, grammarAccess.getIncludeAccess().getWSTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIncludeAccess().getFilesFileDeclarationParserRuleCall_3_0());
				}
				lv_files_3_0=ruleFileDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIncludeRule());
					}
					add(
						$current,
						"files",
						lv_files_3_0,
						"ru.spbstu.application.configurator.model.InfoProject.FileDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleFileDeclaration
entryRuleFileDeclaration returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFileDeclarationRule()); }
	iv_ruleFileDeclaration=ruleFileDeclaration
	{ $current=$iv_ruleFileDeclaration.current.getText(); }
	EOF;

// Rule FileDeclaration
ruleFileDeclaration returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getHyphenMinusKeyword_0_0());
			}
			this_SPACE_1=RULE_SPACE
			{
				$current.merge(this_SPACE_1);
			}
			{
				newLeafNode(this_SPACE_1, grammarAccess.getFileDeclarationAccess().getSPACETerminalRuleCall_0_1());
			}
		)
		(
			(
				kw='/'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getSolidusKeyword_1_0());
				}
			)?
			kw='../'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getFullStopFullStopSolidusKeyword_1_1());
			}
		)*
		(
			(
				this_ID_4=RULE_ID
				{
					$current.merge(this_ID_4);
				}
				{
					newLeafNode(this_ID_4, grammarAccess.getFileDeclarationAccess().getIDTerminalRuleCall_2_0_0());
				}
				    |
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getHyphenMinusKeyword_2_0_1());
				}
				    |
				kw='$'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getDollarSignKeyword_2_0_2());
				}
				    |
				kw='{'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getLeftCurlyBracketKeyword_2_0_3());
				}
				    |
				kw='}'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getRightCurlyBracketKeyword_2_0_4());
				}
			)*
			kw='/'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getSolidusKeyword_2_1());
			}
		)*
		(
			(
				this_ID_10=RULE_ID
				{
					$current.merge(this_ID_10);
				}
				{
					newLeafNode(this_ID_10, grammarAccess.getFileDeclarationAccess().getIDTerminalRuleCall_3_0_0());
				}
				    |
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getHyphenMinusKeyword_3_0_1());
				}
				    |
				kw='$'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getDollarSignKeyword_3_0_2());
				}
				    |
				kw='{'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getLeftCurlyBracketKeyword_3_0_3());
				}
				    |
				kw='}'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getRightCurlyBracketKeyword_3_0_4());
				}
			)*
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFileDeclarationAccess().getFullStopKeyword_3_1());
				}
			)?
			(
				this_ID_16=RULE_ID
				{
					$current.merge(this_ID_16);
				}
				{
					newLeafNode(this_ID_16, grammarAccess.getFileDeclarationAccess().getIDTerminalRuleCall_3_2());
				}
			)?
		)
	)
;

// Entry rule entryRuleIngestNode
entryRuleIngestNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIngestNodeRule()); }
	iv_ruleIngestNode=ruleIngestNode
	{ $current=$iv_ruleIngestNode.current; }
	EOF;

// Rule IngestNode
ruleIngestNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ingestNode:'
		{
			newLeafNode(otherlv_0, grammarAccess.getIngestNodeAccess().getIngestNodeKeyword_0());
		}
		this_WS_1=RULE_WS
		{
			newLeafNode(this_WS_1, grammarAccess.getIngestNodeAccess().getWSTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIngestNodeAccess().getFeaturesFeatureNameParserRuleCall_2_0());
				}
				lv_features_2_0=ruleFeatureName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngestNodeRule());
					}
					add(
						$current,
						"features",
						lv_features_2_0,
						"ru.spbstu.application.configurator.model.InfoProject.FeatureName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIngestNodeAccess().getFeaturesEnumCODParserRuleCall_3_0());
				}
				lv_features_3_0=ruleEnumCOD
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngestNodeRule());
					}
					add(
						$current,
						"features",
						lv_features_3_0,
						"ru.spbstu.application.configurator.model.InfoProject.EnumCOD");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIngestNodeAccess().getFeaturesEnumMRParserRuleCall_4_0());
				}
				lv_features_4_0=ruleEnumMR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngestNodeRule());
					}
					add(
						$current,
						"features",
						lv_features_4_0,
						"ru.spbstu.application.configurator.model.InfoProject.EnumMR");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIngestNodeAccess().getFeaturesLogLevelParserRuleCall_5_0());
				}
				lv_features_5_0=ruleLogLevel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIngestNodeRule());
					}
					add(
						$current,
						"features",
						lv_features_5_0,
						"ru.spbstu.application.configurator.model.InfoProject.LogLevel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumCOD
entryRuleEnumCOD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumCODRule()); }
	iv_ruleEnumCOD=ruleEnumCOD
	{ $current=$iv_ruleEnumCOD.current; }
	EOF;

// Rule EnumCOD
ruleEnumCOD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enumerationCutoffDays:'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumCODAccess().getEnumerationCutoffDaysKeyword_0());
		}
		this_SPACE_1=RULE_SPACE
		{
			newLeafNode(this_SPACE_1, grammarAccess.getEnumCODAccess().getSPACETerminalRuleCall_1());
		}
		(
			(
				lv_name_2_0=RULE_VERSION_NUMBER
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEnumCODAccess().getNameVERSION_NUMBERTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumCODRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ru.spbstu.application.configurator.model.InfoProject.VERSION_NUMBER");
				}
			)
		)
	)
;

// Entry rule entryRuleEnumMR
entryRuleEnumMR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumMRRule()); }
	iv_ruleEnumMR=ruleEnumMR
	{ $current=$iv_ruleEnumMR.current; }
	EOF;

// Rule EnumMR
ruleEnumMR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enumerationMinusRunning:'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumMRAccess().getEnumerationMinusRunningKeyword_0());
		}
		this_SPACE_1=RULE_SPACE
		{
			newLeafNode(this_SPACE_1, grammarAccess.getEnumMRAccess().getSPACETerminalRuleCall_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEnumMRAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumMRRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleLogLevel
entryRuleLogLevel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogLevelRule()); }
	iv_ruleLogLevel=ruleLogLevel
	{ $current=$iv_ruleLogLevel.current; }
	EOF;

// Rule LogLevel
ruleLogLevel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='logLevel:'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogLevelAccess().getLogLevelKeyword_0());
		}
		this_SPACE_1=RULE_SPACE
		{
			newLeafNode(this_SPACE_1, grammarAccess.getLogLevelAccess().getSPACETerminalRuleCall_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLogLevelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogLevelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Rule enumOfArchiveType
ruleenumOfArchiveType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='sip'
			{
				$current = grammarAccess.getEnumOfArchiveTypeAccess().getSIPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEnumOfArchiveTypeAccess().getSIPEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='table'
			{
				$current = grammarAccess.getEnumOfArchiveTypeAccess().getTABLEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEnumOfArchiveTypeAccess().getTABLEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule enumOfTypes
ruleenumOfTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='active archiving'
			{
				$current = grammarAccess.getEnumOfTypesAccess().getACTIVE_ARCHIVINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEnumOfTypesAccess().getACTIVE_ARCHIVINGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='app decomm'
			{
				$current = grammarAccess.getEnumOfTypesAccess().getAPP_DECOMMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEnumOfTypesAccess().getAPP_DECOMMEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_VERSION_NUMBER : '0'..'9' ('.'|'0'..'9')*;

RULE_ML_COMMENT : '#' ( options {greedy=false;} : . )*'\n';

RULE_SPACE : ' ';

RULE_ADDITION : ('$'*|'{'*|'}'*|'-'*|'.'*|' '*|':'*);

RULE_EXCEPTION : ('name:'?|'metadataCacheSize:'?);

RULE_MY_INT : ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
